主要分析算子的数学表达式、输入、输出以及计算逻辑的实现，明确需要调用的
Ascend C接口



步骤1 明确算子的数学表达式及计算逻辑
Add算子的数学表达式为：
z = x + y
计算逻辑是：Ascend C提供的矢量计算接口的操作元素都为LocalTensor，输入数据需要先搬运进AI Core的内部存储Local Memory，
然后使用计算接口完成两个输入参数相加，得到最终结果，再搬出到外部存储Global Memory上


步骤2 明确输入和输出
● Add算子有两个输入：x与y，输出为z
● 本样例中算子的输入支持的数据类型为half（float16），算子输出的数据类型与输入数据类型相同
● 算子输入支持shape（8，2048），输出shape与输入shape相同
● 算子输入支持的format为：ND


步骤3 确定核函数名称和参数
● 您可以自定义核函数名称，本样例中核函数命名为add_custom
● 根据对算子输入输出的分析，确定核函数有3个参数x，y，z；x，y为输入在
Global Memory上的内存地址，z为输出在Global Memory上的内存地址


步骤4 确定算子实现所需接口
● 实现涉及外部存储和内部存储间的数据搬运，查看Ascend C API参考中的数据搬移接口，需要使用8.1.7.3.1 DataCopy来实现数据搬移
● 本样例只涉及矢量计算的加法操作，查看Ascend C API参考中的矢量计算接口8.1.5 矢量计算，初步分析可使用双目指令Add接口8.1.5.4.1 Add实现x+y
● 计算中使用到的Tensor数据结构，使用8.1.4.2.2 AllocTensor、8.1.4.2.3FreeTensor进行申请和释放
● 并行流水任务之间使用Queue队列完成通信和同步，会使用到8.1.4.2.4 EnQue、8.1.4.2.5 DeQue等接口
